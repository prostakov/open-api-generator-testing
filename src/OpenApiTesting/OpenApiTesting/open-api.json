{
    "openapi": "3.0.0",
    "info": {
        "version": "0.2.2",
        "contact": {},
        "title": "Vic.Api",
        "description": "Vic.Api allows you to connect an *ERP* to the Vic.ai product suite.\n\nThe API is structured to provide 3 categories of functionality:\n- **Masterdata:** Masterdata are data in the ERP that Vic.ai interacts with.\n  So you must provide and update this masterdata in Vic.ai, and you may also verify the\n  masterdata copy in Vic.ai\n- **Training Data:** AI requires historical data to train its data model. So you can put\n  historical invoices into Vic.ai to train it, and verify that they are in Vic.ai.\n- **Webhooks:** Users or automated tasks could take various actions in the Vic.ai product suite\n  that result in an interaction with the ERP(for example, posting an invoice, or\n  requesting synchronization).  We'll tell you when such an action has occurred, via a webhook.\n",
        "license": {
            "name": "MIT"
        }
    },
    "servers": [
        {
            "url": "https://api.us.dev.vic.ai/v0",
            "description": "development server, US"
        },
        {
            "url": "https://api.no.dev.vic.ai/v0",
            "description": "development server, NO"
        },
        {
            "url": "https://api.us.stage.vic.ai/v0",
            "description": "staging server, US"
        },
        {
            "url": "https://api.no.stage.vic.ai/v0",
            "description": "staging server, NO"
        },
        {
            "url": "https://api.us.vic.ai/v0",
            "description": "production server, US"
        },
        {
            "url": "https://api.no.vic.ai/v0",
            "description": "production server, NO"
        }
    ],
    "tags": [
        {
            "name": "accounts",
            "description": "GL (General Ledger) accounts are part of your *ERP* **Masterdata**.  In order to be associated with an\ninvoice line item, key data about the account must be stored in Vic.ai.  These operations allow querying and manipulation\nof these GL account data.\n"
        },
        {
            "name": "dimensions",
            "description": "Dimensions are part of your *ERP* **Masterdata**, and represent business categories that are associated with\ninvoice line items, that Vic.ai can automatically assign to invoice line items.  These operations allow querying and\nmanipulation of the dimension data.\n"
        },
        {
            "name": "vendors",
            "description": "Vendors are part of your *ERP* **Masterdata**, and represent companies that produce invoices.  In order to be\nassociated with an invoice, key data about the vendor must be stored in Vic.ai.  These operations allow querying and\nmanipulation of the vendor data.\n"
        },
        {
            "name": "invoices",
            "description": "Vic.ai contains 3 categories of invoices.\n\n- Historical invoices you put into Vic.ai to initially train it.\n- Invoices that have been posted from Vic.ai into your ERP.\n- Invoices that have not yet been posted from Vic.ai.\n"
        },
        {
            "name": "subscription",
            "description": "These requests represents a userâ€™s action in the Vic.ai system and repsonses to those actions.\n"
        },
        {
            "name": "general",
            "description": "General requests on the state of the Vic.ai system\n"
        }
    ],
    "paths": {
        "/token": {
            "post": {
                "description": "Use this request to obtain an authorization token",
                "summary": "Token service",
                "operationId": "getToken",
                "tags": [
                    "auth"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful access token request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "access_token",
                                        "token_type"
                                    ],
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/healthCheck": {
            "get": {
                "description": "Use this request to obtain a health check statement.",
                "summary": "Health check",
                "operationId": "healthCheck",
                "tags": [
                    "general"
                ],
                "responses": {
                    "200": {
                        "description": "Successful health check response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheck"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "description": "Use this request to query the GL account data that are stored in Vic.ai.",
                "summary": "List all accounts",
                "operationId": "listAccounts",
                "tags": [
                    "accounts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PagingLimit"
                    },
                    {
                        "$ref": "#/components/parameters/PagingCursor"
                    },
                    {
                        "$ref": "#/components/parameters/SinceFilter"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of accounts",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accounts"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/{id}": {
            "get": {
                "description": "Use this request to get data for a single GL account that is stored in Vic.ai.",
                "summary": "Info for a specific account",
                "operationId": "getAccount",
                "tags": [
                    "accounts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Use this request to *upsert* GL account data for one GL account into Vic.ai.\n\nIf the account is known by Vic.ai, the externalId supplied will be used to resolve the account and\nperform an update of the data, otherwise, a new account will be inserted.\n\nIf the upsert action is part of a syncRequest, you should include the syncRequest\nID in the `X-Request-Id` header.\n",
                "summary": "Upserts an account",
                "operationId": "upsertAccount",
                "tags": [
                    "accounts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    },
                    {
                        "$ref": "#/components/parameters/RequestId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountUpsert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful upsert",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Use this request to delete data for a single account that is stored in Vic.ai",
                "summary": "Deletes an account",
                "operationId": "deleteAccount",
                "tags": [
                    "accounts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Information for deleted account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dimensions": {
            "get": {
                "description": "Use this request to query the dimensions data that are stored in Vic.ai.",
                "summary": "List all dimensions",
                "operationId": "listDimensions",
                "tags": [
                    "dimensions"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PagingLimit"
                    },
                    {
                        "$ref": "#/components/parameters/PagingCursor"
                    },
                    {
                        "$ref": "#/components/parameters/SinceFilter"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of dimensions",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dimensions"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dimension/{id}": {
            "get": {
                "description": "Use this request to get data for a single dimension that is stored in Vic.ai.",
                "summary": "Info for a specific dimension",
                "operationId": "getDimension",
                "tags": [
                    "dimensions"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dimension"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Use this request to *upsert* dimensions data for one dimension into Vic.ai.\n\nIf the dimension is known by Vic.ai, the externalId supplied will be used to resolve the dimension and\nperform an update of the data, otherwise, a new dimension will be inserted.\n\nIf the upsert action is part of a syncRequest, you should include the syncRequest\nID in the `X-Request-Id` header.\n",
                "summary": "Upserts a dimension",
                "operationId": "upsertDimension",
                "tags": [
                    "dimensions"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    },
                    {
                        "$ref": "#/components/parameters/RequestId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DimensionUpsert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful upsert",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dimension"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Use this request to delete data for a single dimension that is stored in Vic.ai",
                "summary": "Deletes a dimension",
                "operationId": "deleteDimension",
                "tags": [
                    "dimensions"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Information from deleted dimension",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dimension"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendors": {
            "get": {
                "description": "Use this request to query the vendor data that are stored in Vic.ai.",
                "summary": "List all vendors",
                "operationId": "listVendors",
                "tags": [
                    "vendors"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PagingLimit"
                    },
                    {
                        "$ref": "#/components/parameters/PagingCursor"
                    },
                    {
                        "$ref": "#/components/parameters/SinceFilter"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/VendorStateFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of vendors",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendors"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor/{id}": {
            "get": {
                "description": "Use this request to get data for a single vendor that is stored in Vic.ai.",
                "summary": "Info for a specific vendor",
                "operationId": "getVendor",
                "tags": [
                    "vendors"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Use this request to *upsert* vendor data for one vendor into Vic.ai.\n\nIf the vendor is known by Vic.ai, the externalId supplied will be used to resolve the vendor and\nperform an update of the data, otherwise, a new vendor will be inserted.\n\nIf the upsert action is part of a syncRequest, you should include the syncRequest\nID in the `X-Request-Id` header.\n",
                "summary": "Upserts a vendor",
                "operationId": "upsertVendor",
                "tags": [
                    "vendors"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    },
                    {
                        "$ref": "#/components/parameters/RequestId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorUpsert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful upsert",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Use this request to delete data for a single vendor that is stored in Vic.ai",
                "summary": "Deletes a vendor",
                "operationId": "deleteVendor",
                "tags": [
                    "vendors"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Information from deleted vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoices": {
            "get": {
                "description": "Use this request to query the invoice data that are stored in Vic.ai.",
                "summary": "List all invoices",
                "operationId": "listInvoices",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PagingLimit"
                    },
                    {
                        "$ref": "#/components/parameters/PagingCursor"
                    },
                    {
                        "$ref": "#/components/parameters/SinceFilter"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/InvoiceStateFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of invoices",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoices"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoice/{id}": {
            "get": {
                "description": "Use this request to get data for a single invoice that is stored in Vic.ai",
                "summary": "Info for a specific invoice",
                "operationId": "getInvoice",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Use this request to indicate that an invoice has been posted or transferred to the ERP system,\nin the case where you have not activated a subscription, or you have responded to the subscription\nwith a 202-asynchronous response.\n\nNote that this operation can either be a confirmation, or a rejection, depending on the shape of\nthe payload.\n\nPossible payloads:\n\n- InvoiceConfirm: used to confirm that the invoice data have been successfully posted to the ERP,\n  possibly including a postingError.\n\n  - Use of this postingError means that the invoice data are posted, but some secondary content\n    needs amendation in the ERP that cannot be performed from the vic user\n    interface (for example: a problem uploading the posted document).\n\n- InvoiceReject: used to communicate that the invoice data have NOT been successfully posted to\n  the ERP, due to invalid data.  This should NOT be used to communicate an error in posting due\n  to a general failure such as a network issue or an availability issue with the ERP, in those\n  or similar cases, a retry should be performed without notifying the vic system.\n\nCurrently unsupported:\n\n- InvoiceClearError: the error set in an `InvoiceConfirm` operation should be cleared because the\n  postingError has been resolved in the ERP.  This cannot be used to clear an error due to\n  `InvoiceReject`.\n\nNote that `:id` *must* be internalId for this route.\n",
                "summary": "Asynchronous reply to invoice post or invoice transfer",
                "operationId": "ackInvoice",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the internalId of the invoice which should be confirmed",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/InvoiceConfirm"
                                    },
                                    {
                                        "$ref": "#/components/schemas/InvoiceReject"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoice/{id}/document": {
            "get": {
                "description": "Use this request to get the document associated with a single invoice that is stored in Vic.ai",
                "summary": "Document for a specific invoice",
                "operationId": "getInvoiceDocument",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The id of the invoice whose document should be retrieved",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trainingInvoices": {
            "get": {
                "description": "Use this request to query the invoice data that are stored in Vic.ai.",
                "summary": "List all invoices",
                "operationId": "listTrainingInvoices",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PagingLimit"
                    },
                    {
                        "$ref": "#/components/parameters/PagingCursor"
                    },
                    {
                        "$ref": "#/components/parameters/SinceFilter"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of invoices",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrainingInvoices"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trainingInvoice/{id}": {
            "get": {
                "description": "Use this request to get data for a single training invoice that is stored in Vic.ai",
                "summary": "Info for a specific invoice",
                "operationId": "getTrainingInvoice",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrainingInvoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Use this request to *upsert* training invoice data for one invoice into Vic.ai.\n\nFor `multipart/form-data` encoded payloads:\n\n- The request body should contain the invoice object (invoiceData part) as JSON, and\n  corresponding invoice documents as a single pdf file (invoicePayload part) as multipart\n  form data.\n\n- Omitting the invoiceDocument field may only be used for updates.\n\nYou may also encode a `application/json` payload.  This may only be used for updates.\n\nIf the invoice is known by Vic.ai, the externalId supplied will be used to resolve the invoice and\nperform an update of the data, otherwise, a new invoice will be inserted.\n",
                "summary": "Upserts a training invoice",
                "operationId": "upsertTrainingInvoice",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "invoiceData"
                                ],
                                "properties": {
                                    "invoiceData": {
                                        "$ref": "#/components/schemas/TrainingInvoiceUpsert"
                                    },
                                    "invoiceDocument": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "invoiceData": {
                                    "contentType": "application/json",
                                    "headers": {
                                        "Content-Type": {
                                            "required": true,
                                            "schema": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "invoiceDocument": {
                                    "contentType": "application/pdf, image/png, image/tiff, application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                    "headers": {
                                        "Content-Type": {
                                            "required": true,
                                            "schema": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful upsert",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrainingInvoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Use this request to delete data for a single training invoice that is stored in Vic.ai",
                "summary": "Deletes a training invoice",
                "operationId": "deleteTrainingInvoice",
                "tags": [
                    "invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Information from deleted training invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrainingInvoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vatCodes": {
            "get": {
                "description": "Use this request to query all the vat code data that are stored in Vic.ai.",
                "summary": "List all vat codes",
                "operationId": "listVatCodes",
                "tags": [
                    "vat codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PagingLimit"
                    },
                    {
                        "$ref": "#/components/parameters/PagingCursor"
                    },
                    {
                        "$ref": "#/components/parameters/SinceFilter"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/VatCodeFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of vat codes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VatCodes"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vatCode/{id}": {
            "get": {
                "description": "Use this request to get data for a single vat code that is stored in Vic.ai",
                "summary": "Info for a specific vat code",
                "operationId": "getVatCode",
                "tags": [
                    "vat codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VatCode"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Use this request to *upsert* vat code into Vic.ai.\n\nThe request body should contain the vat code object as JSON.\n\nIf the vat code is known by Vic.ai, the id supplied will be used to resolve the vat code and\nperform an update of the data, otherwise, a new vat code will be inserted.\n",
                "summary": "Upserts a vat code",
                "operationId": "upsertVatCode",
                "tags": [
                    "vat codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VatCodeUpsert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful upsert",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VatCode"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Use this request to delete data for a single vat code that is stored in Vic.ai",
                "summary": "Deletes a vat code",
                "operationId": "deleteVatCode",
                "tags": [
                    "vat codes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    },
                    {
                        "$ref": "#/components/parameters/UseSystem"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Information from deleted vat code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VatCode"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscription": {
            "put": {
                "description": "This request is used to configure or modify a new subscription to user and automated actions.\n\nYou must supply a callback url and set an access token that Vic.ai can use to authenticate\nitself in your system.  Notifications of user actions will proceed via the documented schema.\n\nThe callback url must be https.\n",
                "summary": "Subscribe to callback notifications",
                "operationId": "subscribe",
                "tags": [
                    "subscription"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionUpsert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful subscription"
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "callbacks": {
                    "vendorNew": {
                        "{$request.body#/callbackUrl}/vendorNew": {
                            "post": {
                                "description": "This request is sent when a user in Vic.ai adds a new vendor to the system.\n\nRequest body contains the vendor object.\n\nA 201 response indicates that the vendor object has been successfully persisted to the ERP,\nand it must contain the ERP's vendor object id as the externalId parameter.\n\nAny other response will be considered a failure, the vendor object externalId will not be specified,\nand the error message you specify will be surfaced to the user.\n\nA 400 response indicates a data validation error.\n\nThis callback will timeout after 5 seconds.\n",
                                "parameters": [
                                    {
                                        "$ref": "#/components/parameters/RequestId"
                                    }
                                ],
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/VendorCallback"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "201": {
                                        "description": "Successful upsert",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/VendorConfirm"
                                                }
                                            }
                                        }
                                    },
                                    "202": {
                                        "description": "Acknowledge receipt",
                                        "content": {
                                            "text/plain": {
                                                "schema": {
                                                    "enum": [
                                                        "OK"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "description": "unexpected error",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "invoicePost": {
                        "{$request.body#/callbackUrl}/invoicePost": {
                            "post": {
                                "description": "This request is sent when a user in Vic.ai posts an invoice object to the system.\n\nRequest body contains the invoice object (invoiceData part) as JSON, and corresponding\ninvoice documents as a pdf file (invoicePayload part) as multipart form data.  This will\nalways be a pdf file.\n\nA 201 response indicates that the invoice object has been successfully persisted to the\nERP, and it must contain the ERP's invoice object id as the externalId\nparameter.\n\nA 202 response indicates that the receipt of the invoice object has been acknowledged;\nan asynchronous update will occur via invoiceConfirm operationId; the supplied 'X-Request-Id'\nin the request header will be provided as the `X-Request-Id` header for any associated\nasynchronous updates.\n\nAny other response will be considered a failure, the invoice object externalId will not be specified,\nand the error message you specify will be surfaced to the user.\n\nA 400 response indicates a data validation error.\n\nThis callback will timeout after 5 seconds; to prevent inconsistencies, if the request will take\nlonger than 5 seconds, it is appropriate to respond with a 202 response code.\n",
                                "parameters": [
                                    {
                                        "$ref": "#/components/parameters/RequestId"
                                    }
                                ],
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "multipart/form-data": {
                                            "schema": {
                                                "type": "object",
                                                "properties": {
                                                    "invoiceData": {
                                                        "$ref": "#/components/schemas/Invoice"
                                                    },
                                                    "invoiceDocument": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    }
                                                }
                                            },
                                            "encoding": {
                                                "invoiceData": {
                                                    "contentType": "application/json"
                                                },
                                                "invoiceDocument": {
                                                    "contentType": "application/pdf"
                                                }
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "201": {
                                        "description": "Successful upsert",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "oneOf": [
                                                        {
                                                            "$ref": "#/components/schemas/InvoiceConfirm"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "202": {
                                        "description": "Deferred post, confirmation asynchronous"
                                    },
                                    "400": {
                                        "description": "invalid invoice data",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "description": "unexpected error",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "invoiceTransfer": {
                        "{$request.body#/callbackUrl}/invoiceTransfer": {
                            "post": {
                                "description": "This request is sent when a user in Vic.ai selects and invoice document and *transfers* it to the ERP.\nNote: there will be no Vic.ai generated invoice data sent with this a *transferred* invoice.\n\nRequest body contains the invoice document.\n\nA 201 response indicates that the invoice document has been successfully transferred to the ERP,\nand it must contain the ERP's invoice document id as the externalId parameter.\n\nA 202 response indicates that the receipt of the invoice transfer has been acknowledged;\nan asynchronous update will occur via invoiceConfirm operationId; the supplied 'X-Request-Id'\nin the request header will be provided as the `X-Request-Id` header for any associated\nasynchronous updates.\n\nAny other response will be considered a failure, the invoice object externalId will not be specified,\nand the error message you specify will be surfaced to the user.\n\nA 400 response indicates a data validation error.\n\nThis callback will timeout after 5 seconds; to prevent inconsistencies, if the request will take\nlonger than 5 seconds, it is appropriate to respond with a 202 response code.\n",
                                "parameters": [
                                    {
                                        "$ref": "#/components/parameters/RequestId"
                                    }
                                ],
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/pdf": {
                                            "schema": {
                                                "type": "string",
                                                "format": "binary"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "201": {
                                        "description": "Successful upsert",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "enum": [
                                                        "OK"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "202": {
                                        "description": "Deferred post, confirmation asynchronous"
                                    },
                                    "default": {
                                        "description": "unexpected error",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "syncRequest": {
                        "{$request.body#/callbackUrl}/syncRequest": {
                            "post": {
                                "description": "This request is sent when a user in Vic.ai triggers a sync of all masterdata.\n\nIn response to this message, youâ€™re expected to post masterdata (vendors, GL accounts, dimensions) into Vic.ai using\nthe respective routes.  You may perform a partial update, determining which data to update using queries.\n\nOnce this process is completed, perform a syncUpdate patch, passing the syncId, which will allow Vic.ai to mark the\nuser's sync action as completed with the \"complete\" operation.  If you cannot complete this process before the\nspecified timeout, then perform a syncUpdate patch with the \"extend\" operation, which will extend the timeout for\nthe update.  If the timeout expires before a \"complete\" action has been sent, then the request will be marked as\n\"failed\".\n\nThe body of the syncRequest contains the requestId; this is a token that should be returned with all upsert\nactions associated with this syncRequest.\n\nA 200 response indicates that the request has been acknowledged and informs the user that the sync has been\nsuccessfully triggered.\n",
                                "requestBody": {
                                    "required": true,
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/RequestIdCallback"
                                            }
                                        }
                                    }
                                },
                                "responses": {
                                    "200": {
                                        "description": "request acknowleged"
                                    },
                                    "default": {
                                        "description": "request unservicable",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "This request is used to cancel a subscription to user actions.  In conjunction with a post requst, you may use this as a\nfirst step to update subscription URLs or authorization tokens.\n",
                "summary": "Unsubscribe from callback notifications",
                "operationId": "unsubscribe",
                "tags": [
                    "subscription"
                ],
                "responses": {
                    "201": {
                        "description": "Successful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "OK"
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "parameters": {
            "PathId": {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The id of the database entry",
                "schema": {
                    "type": "string"
                }
            },
            "PagingLimit": {
                "name": "limit",
                "in": "query",
                "description": "How many items to return at one time (max 100) (default 100)",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "PagingCursor": {
                "name": "cursor",
                "in": "query",
                "description": "Which item to start from",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "SinceFilter": {
                "name": "since",
                "in": "query",
                "description": "Datetime value for incremental updates. NB: for external datetimes, the expected format is not in UTC. for vic-internal datetimes (see SinceIsExternal) the format is UTC.",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "InvoiceStateFilter": {
                "name": "state",
                "in": "query",
                "description": "selects the state of invoices which are to be searched (defaults to POSTED)",
                "required": false,
                "schema": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/InvoiceState"
                        },
                        {
                            "enum": [
                                "ALL"
                            ]
                        }
                    ]
                }
            },
            "VendorStateFilter": {
                "name": "state",
                "in": "query",
                "description": "selects the state of vendor which are to be searched",
                "required": false,
                "schema": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/VendorState"
                        },
                        {
                            "enum": [
                                "ALL"
                            ]
                        }
                    ]
                }
            },
            "VatCodeFilter": {
                "name": "vatCode",
                "in": "query",
                "description": "selects the vat code which is to be displayed",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "UseSystem": {
                "name": "useSystem",
                "in": "query",
                "description": "Which system to use for id or updatedAt filters.\nNOTE: Please use the all-caps `INTERNAL` and `EXTERNAL` options. Lowercase `internal`\nand `external` options are deprecated but supported for backwards-compatibility and\nwill be removed before 1.0; .\n",
                "required": false,
                "schema": {
                    "enum": [
                        "INTERNAL",
                        "EXTERNAL",
                        "internal",
                        "external"
                    ],
                    "default": "EXTERNAL"
                }
            },
            "SortOrder": {
                "name": "sortOrder",
                "in": "query",
                "description": "what sort order should be used for queries",
                "required": false,
                "schema": {
                    "enum": [
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "default": "ASCENDING"
                }
            },
            "RequestId": {
                "in": "header",
                "name": "X-Request-Id",
                "description": "token to be able to correctly log associated requests",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "schemas": {
            "InternalId": {
                "type": "string",
                "example": "47"
            },
            "ExternalId": {
                "type": "string",
                "example": "21b31bc7-1267-4335-893c-d7fe4706a238",
                "maxLength": 255
            },
            "NullableString": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "enum": [
                            null
                        ]
                    }
                ]
            },
            "NullableIndex": {
                "oneOf": [
                    {
                        "type": "integer",
                        "minimum": 0
                    },
                    {
                        "enum": [
                            null
                        ]
                    }
                ]
            },
            "NullableObject": {
                "oneOf": [
                    {
                        "type": "object"
                    },
                    {
                        "enum": [
                            null
                        ]
                    }
                ]
            },
            "QueryCommon": {
                "type": "object",
                "required": [
                    "internalId",
                    "internalUpdatedAt"
                ],
                "properties": {
                    "internalId": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InternalId"
                            }
                        ],
                        "readOnly": true
                    },
                    "internalUpdatedAt": {
                        "type": "string",
                        "description": "note that internalUpdatedAt is in UTC",
                        "format": "date-time"
                    },
                    "externalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "externalUpdatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "note that externalUpdatedAt does NOT have UTC normalization",
                        "example": "2021-06-29T17:20:53.154"
                    }
                }
            },
            "UpsertCommon": {
                "type": "object",
                "required": [
                    "externalUpdatedAt"
                ],
                "properties": {
                    "externalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "externalUpdatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "note that externalUpdatedAt does NOT have UTC normalization",
                        "example": "2021-06-29T17:20:53.154"
                    }
                }
            },
            "HealthCheck": {
                "type": "object",
                "required": [
                    "status",
                    "version",
                    "company"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "PASS",
                            "FAIL",
                            "WARN"
                        ]
                    },
                    "version": {
                        "type": "string",
                        "format": "semver"
                    },
                    "company": {
                        "type": "string"
                    }
                }
            },
            "AccountCommon": {
                "type": "object",
                "required": [
                    "number",
                    "name"
                ],
                "properties": {
                    "number": {
                        "type": "string",
                        "format": "number"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "externalData": {
                        "$ref": "#/components/schemas/NullableObject"
                    },
                    "requiredDimensionsExternal": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalId"
                        }
                    },
                    "parentAccountExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    }
                }
            },
            "Account": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QueryCommon"
                    },
                    {
                        "$ref": "#/components/schemas/AccountCommon"
                    }
                ],
                "type": "object",
                "required": [
                    "number",
                    "name"
                ],
                "properties": {
                    "requiredDimensionsInternal": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InternalId"
                        }
                    },
                    "parentAccountInternalId": {
                        "$ref": "#/components/schemas/InternalId"
                    }
                }
            },
            "AccountUpsert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpsertCommon"
                    },
                    {
                        "$ref": "#/components/schemas/AccountCommon"
                    }
                ]
            },
            "Accounts": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Account"
                }
            },
            "DimensionCommon": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string"
                    },
                    "shortName": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "externalData": {
                        "$ref": "#/components/schemas/NullableObject"
                    },
                    "parentDimensionExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    }
                }
            },
            "Dimension": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QueryCommon"
                    },
                    {
                        "$ref": "#/components/schemas/DimensionCommon"
                    }
                ],
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "parentDimensionInternalId": {
                        "$ref": "#/components/schemas/InternalId"
                    }
                }
            },
            "DimensionUpsert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpsertCommon"
                    },
                    {
                        "$ref": "#/components/schemas/DimensionCommon"
                    }
                ]
            },
            "Dimensions": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Dimension"
                }
            },
            "InvoiceCommon": {
                "type": "object",
                "properties": {
                    "transactionType": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "refNumber": {
                        "description": "number that appears on the invoice",
                        "type": "string",
                        "maxLength": 255
                    },
                    "poNumber": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "description": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "currency": {
                        "type": "string",
                        "format": "ISO-4217",
                        "maxLength": 255
                    },
                    "language": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "issueDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "glDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "paymentInfo": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PaymentInfoUS"
                            },
                            {
                                "$ref": "#/components/schemas/PaymentInfoSE"
                            },
                            {
                                "$ref": "#/components/schemas/PaymentInfoNO"
                            }
                        ]
                    },
                    "invoiceInfo": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceInfoUS"
                            },
                            {
                                "$ref": "#/components/schemas/InvoiceInfoSE"
                            },
                            {
                                "$ref": "#/components/schemas/InvoiceInfoNO"
                            }
                        ]
                    }
                }
            },
            "InvoiceFetched": {
                "required": [
                    "status"
                ],
                "properties": {
                    "postingError": {
                        "type": "string"
                    },
                    "documentUrl": {
                        "type": "string",
                        "format": "url"
                    },
                    "status": {
                        "$ref": "#/components/schemas/InvoiceState"
                    }
                }
            },
            "InvoiceRequirable": {
                "required": [
                    "transactionType",
                    "refNumber",
                    "poNumber",
                    "description",
                    "currency",
                    "language",
                    "lineItems"
                ]
            },
            "Invoice": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InvoiceCommon"
                    },
                    {
                        "$ref": "#/components/schemas/InvoiceRequirable"
                    },
                    {
                        "$ref": "#/components/schemas/InvoiceFetched"
                    }
                ],
                "required": [
                    "vendorExternalId"
                ],
                "properties": {
                    "internalId": {
                        "type": "string"
                    },
                    "vendorInternalId": {
                        "$ref": "#/components/schemas/InternalId"
                    },
                    "vendorExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "lineItems": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "$ref": "#/components/schemas/InvoiceLineItem"
                        }
                    }
                }
            },
            "InvoiceConfirm": {
                "type": "object",
                "required": [
                    "externalId",
                    "externalUpdatedAt"
                ],
                "properties": {
                    "externalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "externalUpdatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "postingError": {
                        "type": "string"
                    }
                }
            },
            "InvoiceReject": {
                "type": "object",
                "required": [
                    "item",
                    "field",
                    "reason"
                ],
                "properties": {
                    "item": {
                        "$ref": "#/components/schemas/NullableIndex"
                    },
                    "field": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "InvoiceState": {
                "enum": [
                    "NOT_READY",
                    "IN_APPROVALS",
                    "READY_FOR_POST",
                    "READY_FOR_TRANSFER",
                    "POSTED",
                    "TRANSFERRED"
                ]
            },
            "VendorState": {
                "enum": [
                    "CONFIRMED",
                    "UNCONFIRMED"
                ]
            },
            "TrainingInvoice": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InvoiceCommon"
                    },
                    {
                        "$ref": "#/components/schemas/InvoiceRequirable"
                    }
                ],
                "required": [
                    "vendorExternalId",
                    "externalId"
                ],
                "properties": {
                    "vendorExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "lineItems": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "$ref": "#/components/schemas/InvoiceLineItem"
                        }
                    },
                    "externalData": {
                        "$ref": "#/components/schemas/NullableObject"
                    }
                }
            },
            "TrainingInvoiceUpsert": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpsertCommon"
                    },
                    {
                        "$ref": "#/components/schemas/InvoiceCommon"
                    }
                ],
                "required": [
                    "vendorExternalId"
                ],
                "properties": {
                    "vendorExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "lineItems": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "$ref": "#/components/schemas/TrainingInvoiceLineItemUpsert"
                        }
                    },
                    "externalData": {
                        "$ref": "#/components/schemas/NullableObject"
                    }
                }
            },
            "Invoices": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Invoice"
                }
            },
            "TrainingInvoices": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/TrainingInvoice"
                }
            },
            "InvoiceLineItemCommon": {
                "type": "object",
                "required": [
                    "amount"
                ],
                "properties": {
                    "index": {
                        "description": "position within invoice, if omitted, will be inferred",
                        "type": "integer"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "billable": {
                        "type": "boolean",
                        "default": false
                    },
                    "accrual": {
                        "$ref": "#/components/schemas/AccrualInfo"
                    },
                    "invoiceLineItemInfo": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceLineItemInfoUS"
                            },
                            {
                                "$ref": "#/components/schemas/InvoiceLineItemInfoSE"
                            },
                            {
                                "$ref": "#/components/schemas/InvoiceLineItemInfoNO"
                            }
                        ]
                    }
                }
            },
            "InvoiceLineItem": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InvoiceLineItemCommon"
                    }
                ],
                "required": [
                    "costAccountExternalId",
                    "dimensionsExternalIds"
                ],
                "properties": {
                    "costAccountInternalId": {
                        "$ref": "#/components/schemas/InternalId"
                    },
                    "costAccountExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "dimensionsInternalIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InternalId"
                        }
                    },
                    "dimensionsExternalIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalId"
                        }
                    }
                }
            },
            "TrainingInvoiceLineItemUpsert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InvoiceLineItemCommon"
                    }
                ],
                "required": [
                    "costAccountExternalId"
                ],
                "properties": {
                    "costAccountExternalId": {
                        "$ref": "#/components/schemas/ExternalId"
                    },
                    "dimensionsExternalIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalId"
                        }
                    },
                    "lineItemIsVatOnly": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "VatCode": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QueryCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VatCodeCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VatCodeRequirable"
                    }
                ]
            },
            "VatCodes": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VatCode"
                }
            },
            "VatCodeCommon": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "externalId": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "externalUpdatedAt": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "activeStartingAt": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "activeEndingAt": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "number": {
                        "type": "number"
                    },
                    "rate": {
                        "type": "number"
                    },
                    "remoteData": {
                        "type": "object"
                    },
                    "defaultInvoiceCreditAccount": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "vatCreditAccount": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "vatDebitAccount": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "VatCodeRequirable": {
                "required": [
                    "code",
                    "description",
                    "activeStartingAt",
                    "remoteData"
                ]
            },
            "VatCodeUpsert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpsertCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VatCodeCommon"
                    }
                ]
            },
            "VendorCommon": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "oneOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "enum": [
                                    null
                                ]
                            }
                        ],
                        "format": "email"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "addressStreet": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "addressCity": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "addressState": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "addressPostalCode": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/NullableString"
                    },
                    "currency": {
                        "type": "string",
                        "format": "ISO-4217",
                        "maxLength": 3
                    },
                    "confirmedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "enum": [
                            "CONFIRMED",
                            "UNCONFIRMED"
                        ]
                    },
                    "taxInfo": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TaxInfoUS"
                            },
                            {
                                "$ref": "#/components/schemas/TaxInfoSE"
                            },
                            {
                                "$ref": "#/components/schemas/TaxInfoNO"
                            }
                        ]
                    },
                    "defaultPaymentInfo": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PaymentInfoUS"
                            },
                            {
                                "$ref": "#/components/schemas/PaymentInfoSE"
                            },
                            {
                                "$ref": "#/components/schemas/PaymentInfoNO"
                            }
                        ]
                    },
                    "externalData": {
                        "$ref": "#/components/schemas/NullableObject"
                    }
                }
            },
            "VendorRequirable": {
                "required": [
                    "name",
                    "email",
                    "phone",
                    "addressStreet",
                    "addressCity",
                    "addressState",
                    "addressPostalCode",
                    "countryCode"
                ]
            },
            "Vendor": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QueryCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VendorCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VendorRequirable"
                    }
                ]
            },
            "Vendors": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Vendor"
                }
            },
            "VendorUpsert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpsertCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VendorCommon"
                    }
                ]
            },
            "VendorCallback": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/VendorCommon"
                    },
                    {
                        "$ref": "#/components/schemas/VendorRequirable"
                    },
                    {
                        "type": "object",
                        "required": [
                            "internalId"
                        ],
                        "properties": {
                            "internalId": {
                                "$ref": "#/components/schemas/InternalId"
                            }
                        }
                    }
                ]
            },
            "VendorConfirm": {
                "allOf": [
                    {
                        "required": [
                            "externalId"
                        ]
                    },
                    {
                        "$ref": "#/components/schemas/UpsertCommon"
                    }
                ]
            },
            "SubscriptionUpsert": {
                "type": "object",
                "properties": {
                    "callbackUrl": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://my.erp.com/vic-callback/"
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "required": [
                    "callbackUrl",
                    "accessToken",
                    "expiresAt"
                ]
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "PaymentTerm": {
                "type": "object",
                "required": [
                    "count",
                    "unit"
                ],
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "unit": {
                        "enum": [
                            "MONTHS",
                            "DAYS"
                        ]
                    }
                }
            },
            "AccrualInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentTerm"
                    }
                ],
                "required": [
                    "start"
                ],
                "properties": {
                    "start": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "TransactionType": {
                "enum": [
                    "INVOICE",
                    "CREDITNOTE"
                ],
                "default": "INVOICE"
            },
            "TaxInfoUS": {
                "type": "object",
                "required": [
                    "taxId"
                ],
                "properties": {
                    "taxId": {
                        "type": "string"
                    },
                    "is1099vendor": {
                        "type": "boolean"
                    }
                }
            },
            "TaxInfoSE": {
                "type": "object",
                "required": [
                    "orgNumber"
                ],
                "properties": {
                    "orgNumber": {
                        "type": "string"
                    }
                }
            },
            "TaxInfoNO": {
                "type": "object",
                "required": [
                    "orgNumber"
                ],
                "properties": {
                    "orgNumber": {
                        "type": "string"
                    }
                }
            },
            "PaymentInfoUS": {
                "type": "object",
                "required": [
                    "bankAccountNum",
                    "bankCode"
                ],
                "properties": {
                    "bankAccountNum": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bankCode": {
                        "type": "string"
                    },
                    "paymentTerm": {
                        "$ref": "#/components/schemas/PaymentTerm"
                    }
                }
            },
            "PaymentInfoSE": {
                "type": "object",
                "properties": {
                    "bankAccountNum": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bankGiro": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "plusGiro": {
                        "type": "string"
                    },
                    "internationalBankAccount": {
                        "type": "object",
                        "required": [
                            "iban",
                            "bic"
                        ],
                        "properties": {
                            "iban": {
                                "type": "string",
                                "maxLength": 255
                            },
                            "bic": {
                                "type": "string",
                                "maxLength": 255
                            }
                        }
                    },
                    "defaultMethod": {
                        "enum": [
                            "BANKACCOUNT",
                            "BANKGIRO",
                            "PLUSGIRO",
                            "IBAN"
                        ]
                    }
                }
            },
            "PaymentInfoNO": {
                "type": "object",
                "properties": {
                    "bankAccountNum": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bankGiro": {
                        "type": "string"
                    },
                    "plusGiro": {
                        "type": "string"
                    },
                    "internationalBankAccount": {
                        "type": "object",
                        "required": [
                            "iban",
                            "bic"
                        ],
                        "properties": {
                            "iban": {
                                "type": "string",
                                "maxLength": 255
                            },
                            "bic": {
                                "type": "string",
                                "maxLength": 255
                            }
                        }
                    },
                    "defaultMethod": {
                        "enum": [
                            "BANKACCOUNT",
                            "BANKGIRO",
                            "PLUSGIRO",
                            "IBAN"
                        ]
                    }
                }
            },
            "InvoiceInfoUS": {
                "enum": [
                    null
                ]
            },
            "InvoiceInfoSE": {
                "enum": [
                    null
                ]
            },
            "InvoiceInfoNO": {
                "type": "object",
                "required": [
                    "kid"
                ],
                "properties": {
                    "kid": {
                        "type": "string"
                    },
                    "creditAccountExternalId": {
                        "type": "string"
                    },
                    "creditAccountInternalId": {
                        "type": "string"
                    }
                }
            },
            "InvoiceLineItemInfoUS": {},
            "InvoiceLineItemInfoSE": {
                "type": "object",
                "required": [
                    "vatCode",
                    "vatAmount"
                ],
                "properties": {
                    "vatCode": {
                        "type": "string"
                    },
                    "vatAmount": {
                        "type": "number"
                    }
                }
            },
            "InvoiceLineItemInfoNO": {
                "type": "object",
                "required": [
                    "vatCode",
                    "vatAmount"
                ],
                "properties": {
                    "vatCode": {
                        "type": "string"
                    },
                    "vatAmount": {
                        "type": "number"
                    }
                }
            },
            "RequestIdCallback": {
                "type": "object",
                "required": [
                    "requestId"
                ],
                "properties": {
                    "requestId": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            }
        }
    }
}
